[gd_resource type="VisualShader" load_steps=42 format=3 uid="uid://dkjcr2ocolsln"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/simplex4d_fractal.gd" id="1_u6rvw"]

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_mcgoa"]
constant = Vector3(1, 1, 0)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8phx1"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8hc2a"]
constant = 0.6

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_tx7vf"]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kpqty"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tox2c"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_strhq"]
parameter_name = "distortion_scale"
hint = 1
max = 10.0
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_8ah18"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_w0ifn"]
parameter_name = "Albedo"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8wwj6"]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_xxpoj"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ect38"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6ibkl"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gu8rq"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_hsgvb"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_qdxpn"]
output_port_for_preview = 0
default_input_values = [1, 6, 2, Vector3(2, 2, 0), 3, 2, 4, 0.8, 5, 0.5, 6, 0.6, 7, Vector3(0.5, 0.5, 0), 8, 0, 9, 0]
initialized = true
script = ExtResource("1_u6rvw")

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_bka45"]
parameter_name = "Panning"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kff78"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_tmriw"]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yf1g1"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4q5h6"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0.5, 0.5)]
op_type = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_yhij3"]
parameter_name = "distortion_intensity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_37mwb"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_406j0"]
parameter_name = "Occlusion"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_thcts"]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tgmic"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wxxa8"]
parameter_name = "Occlusion_Intensity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_muv64"]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_337br"]
parameter_name = "Tiling"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_l273m"]
parameter_name = "Normal_Map"
texture_type = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_prekt"]
source = 5
texture_type = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_nh8dd"]
parameter_name = "Roughness"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kibun"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wqcht"]
parameter_name = "Specular"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_1hmlg"]
parameter_name = "Metallic"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tbprn"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_kol75"]
parameter_name = "distortion_speed"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_dklpf"]
constant = 6.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_palmc"]
constant = 2.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_av53v"]
constant = 0.8

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 Color : source_color;
uniform vec2 Panning = vec2(0.000000, 0.000000);
uniform float distortion_speed;
uniform float distortion_scale : hint_range(0, 10) = 5;
uniform float distortion_intensity : hint_range(0, 1) = 0.5;
uniform vec2 Tiling = vec2(1.000000, 1.000000);
uniform sampler2D Albedo : source_color;
uniform float Metallic : hint_range(0, 1) = 0;
uniform float Roughness : hint_range(0, 1) = 1;
uniform float Specular : hint_range(0, 1) = 0;
uniform sampler2D Occlusion : source_color;
uniform float Occlusion_Intensity : hint_range(0, 1) = 1;
uniform sampler2D Normal_Map : hint_normal;


// FractalSimplexNoise4D
vec4 _permute_4_s4_noise_fractal(vec4 x) {
	return ((x * 34.0) + 1.0) * x - floor(((x * 34.0) + 1.0) * x * (1.0 / 289.0)) * 289.0;
}
float _permute_s4_noise_fractal(float x) {
	return ((x * 34.0) + 1.0) * x - floor(((x * 34.0) + 1.0) * x * (1.0 / 289.0)) * 289.0;
}
vec4 _grad4_s4_noise_fractal(float j, vec4 ip) {
	vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);
	vec4 p, s;
	p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;
	p.w = 1.5 - dot(abs(p.xyz), ones.xyz);
	s = vec4(lessThan(p, vec4(0.0)));
	p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; 
	return p;
}
float _simplex4dNoiseFractalFunc(vec4 v) {
	vec4 C = vec4( 0.138196601125011,
				0.276393202250021,
				0.414589803375032,
				-0.447213595499958);
	
	vec4 i  = floor(v + dot(v, vec4(0.309016994374947451)) );
	vec4 x0 = v -   i + dot(i, C.xxxx);
	
	vec4 i0;
	vec3 isX = step( x0.yzw, x0.xxx );
	vec3 isYZ = step( x0.zww, x0.yyz );
	i0.x = isX.x + isX.y + isX.z;
	i0.yzw = 1.0 - isX;
	i0.y += isYZ.x + isYZ.y;
	i0.zw += 1.0 - isYZ.xy;
	i0.z += isYZ.z;
	i0.w += 1.0 - isYZ.z;
	
	vec4 i3 = clamp( i0, 0.0, 1.0 );
	vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );
	vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );
	
	vec4 x1 = x0 - i1 + C.xxxx;
	vec4 x2 = x0 - i2 + C.yyyy;
	vec4 x3 = x0 - i3 + C.zzzz;
	vec4 x4 = x0 + C.wwww;
	
	i = i - floor(i * (1.0 / 289.0)) * 289.0;
	float j0 = _permute_s4_noise_fractal( _permute_s4_noise_fractal( _permute_s4_noise_fractal( _permute_s4_noise_fractal(i.w) + i.z) + i.y) + i.x);
	vec4 j1 = _permute_4_s4_noise_fractal( _permute_4_s4_noise_fractal( _permute_4_s4_noise_fractal( _permute_4_s4_noise_fractal (
				i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))
				+ i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))
				+ i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))
				+ i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));
	
	vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;
	
	vec4 p0 = _grad4_s4_noise_fractal(j0,   ip);
	vec4 p1 = _grad4_s4_noise_fractal(j1.x, ip);
	vec4 p2 = _grad4_s4_noise_fractal(j1.y, ip);
	vec4 p3 = _grad4_s4_noise_fractal(j1.z, ip);
	vec4 p4 = _grad4_s4_noise_fractal(j1.w, ip);
	
	vec4 norm = 2.79284291400159 - 1.85373472095314 * vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3));
	p0 *= norm.x;
	p1 *= norm.y;
	p2 *= norm.z;
	p3 *= norm.w;
	p4 *= 2.79284291400159 - 1.85373472095314 * dot(p4,p4);
	
	vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), vec3(0.0));
	vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)), vec2(0.0));
	m0 = m0 * m0;
	m1 = m1 * m1;
	return 33.0 *(dot(m0*m0, vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2)))
				+ dot(m1*m1, vec2(dot(p3, x3), dot(p4, x4))));
}
float _simplexNoise4DFBM(vec2 _uv_sn4fbm, int _oct_sn4fbm, vec2 _per_sn4fbm, float _lac_sn4fbm, float _persist_sn4fbm,
				float _rot_sn4fbm, float _ampl_sn4fbm, vec2 _shift_sn4fbm, float _time_sn4fbm, float _z_sn4fbm) {
	float _v = 0.0;
	float _a = _ampl_sn4fbm;
	mat2 _r0t = mat2(vec2(cos(_rot_sn4fbm), sin(_rot_sn4fbm)), vec2(-sin(_rot_sn4fbm), cos(_rot_sn4fbm)));
	for (int i = 0; i < _oct_sn4fbm; ++i) {
		_v += _a * _simplex4dNoiseFractalFunc(vec4(_uv_sn4fbm * _per_sn4fbm, _time_sn4fbm, _z_sn4fbm));
		_uv_sn4fbm = _r0t * _uv_sn4fbm * _lac_sn4fbm + _shift_sn4fbm;
		_a *= _persist_sn4fbm;
	}
	return (min(_v, 1.0) + 1.0) * 0.5;
}

void fragment() {
// ColorParameter:25
	vec4 n_out25p0 = Color;


// Input:34
	vec2 n_out34p0 = UV;


// Vector2Parameter:30
	vec2 n_out30p0 = Panning;


// VectorDecompose:29
	float n_out29p0 = n_out30p0.x;
	float n_out29p1 = n_out30p0.y;


// Input:27
	float n_out27p0 = TIME;


// VectorOp:31
	vec2 n_out31p0 = vec2(n_out29p0) * vec2(n_out27p0);


// VectorOp:28
	vec2 n_out28p0 = vec2(n_out29p1) * vec2(n_out27p0);


// VectorCompose:32
	vec2 n_out32p0 = vec2(n_out31p0.x, n_out28p0.x);


// UVFunc:40
	vec2 n_in40p1 = vec2(1.00000, 1.00000);
	vec2 n_out40p0 = n_out32p0 * n_in40p1 + n_out34p0;


// Input:17
	vec2 n_out17p0 = UV;


// FloatParameter:55
	float n_out55p0 = distortion_speed;


// Input:20
	float n_out20p0 = TIME;


// VectorOp:54
	vec2 n_out54p0 = vec2(n_out55p0) * vec2(n_out20p0);


// UVFunc:22
	vec2 n_in22p1 = vec2(1.00000, 1.00000);
	vec2 n_out22p0 = n_out54p0 * n_in22p1 + n_out17p0;


// FloatConstant:6
	float n_out6p0 = 6.000000;


// FloatParameter:21
	float n_out21p0 = distortion_scale;


// FloatConstant:8
	float n_out8p0 = 2.000000;


// FloatConstant:9
	float n_out9p0 = 0.800000;


// FloatConstant:11
	float n_out11p0 = 0.500000;


// FloatConstant:12
	float n_out12p0 = 0.600000;


// Vector3Constant:10
	vec3 n_out10p0 = vec3(1.000000, 1.000000, 0.000000);


// FloatConstant:13
	float n_out13p0 = 1.000000;


// Input:5
	float n_out5p0 = TIME;


	float n_out3p0;
// FractalSimplexNoise4D:3
	{
		n_out3p0 = _simplexNoise4DFBM(vec3(n_out22p0, 0.0).xy, int(n_out6p0), vec3(n_out21p0).xy, n_out8p0, n_out9p0, n_out11p0, n_out12p0, n_out10p0.xy, n_out5p0, n_out13p0);
	}


// FloatParameter:39
	float n_out39p0 = distortion_intensity;


// Mix:38
	vec2 n_out38p0 = mix(n_out40p0, vec2(n_out3p0), vec2(n_out39p0));


// Vector2Parameter:46
	vec2 n_out46p0 = Tiling;


// UVFunc:45
	vec2 n_in45p2 = vec2(0.00000, 0.00000);
	vec2 n_out45p0 = (n_out38p0 - n_in45p2) * n_out46p0 + n_in45p2;


	vec4 n_out24p0;
// Texture2D:24
	n_out24p0 = texture(Albedo, n_out45p0);


// VectorOp:26
	vec4 n_out26p0 = n_out25p0 * n_out24p0;


// FloatParameter:51
	float n_out51p0 = Metallic;


// FloatParameter:49
	float n_out49p0 = Roughness;


// FloatParameter:50
	float n_out50p0 = Specular;


	vec4 n_out42p0;
// Texture2D:42
	n_out42p0 = texture(Occlusion, n_out45p0);


// FloatParameter:44
	float n_out44p0 = Occlusion_Intensity;


// VectorOp:43
	vec4 n_out43p0 = n_out42p0 * vec4(n_out44p0);


	vec4 n_out48p0;
// Texture2D:48
	n_out48p0 = texture(Normal_Map, n_out45p0);


// Output:0
	ALBEDO = vec3(n_out26p0.xyz);
	METALLIC = n_out51p0;
	ROUGHNESS = n_out49p0;
	SPECULAR = n_out50p0;
	AO = n_out43p0.x;
	NORMAL_MAP = vec3(n_out48p0.xyz);


}
"
nodes/fragment/0/position = Vector2(1520, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_qdxpn")
nodes/fragment/3/position = Vector2(-1000, 400)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_kibun")
nodes/fragment/5/position = Vector2(-1440, 1340)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_dklpf")
nodes/fragment/6/position = Vector2(-1320, 900)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_palmc")
nodes/fragment/8/position = Vector2(-1320, 960)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatConstant_av53v")
nodes/fragment/9/position = Vector2(-1320, 1020)
nodes/fragment/10/node = SubResource("VisualShaderNodeVec3Constant_mcgoa")
nodes/fragment/10/position = Vector2(-1480, 1200)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_8phx1")
nodes/fragment/11/position = Vector2(-1320, 1080)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_8hc2a")
nodes/fragment/12/position = Vector2(-1320, 1140)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_tx7vf")
nodes/fragment/13/position = Vector2(-1320, 1280)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_kpqty")
nodes/fragment/17/position = Vector2(-1740, 420)
nodes/fragment/20/node = SubResource("VisualShaderNodeInput_tox2c")
nodes/fragment/20/position = Vector2(-2140, 680)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatParameter_strhq")
nodes/fragment/21/position = Vector2(-1420, 620)
nodes/fragment/22/node = SubResource("VisualShaderNodeUVFunc_8ah18")
nodes/fragment/22/position = Vector2(-1420, 400)
nodes/fragment/23/node = SubResource("VisualShaderNodeTexture2DParameter_w0ifn")
nodes/fragment/23/position = Vector2(40, -240)
nodes/fragment/24/node = SubResource("VisualShaderNodeTexture_8wwj6")
nodes/fragment/24/position = Vector2(420, -220)
nodes/fragment/25/node = SubResource("VisualShaderNodeColorParameter_xxpoj")
nodes/fragment/25/position = Vector2(100, -420)
nodes/fragment/26/node = SubResource("VisualShaderNodeVectorOp_ect38")
nodes/fragment/26/position = Vector2(620, -400)
nodes/fragment/27/node = SubResource("VisualShaderNodeInput_6ibkl")
nodes/fragment/27/position = Vector2(-2480, 240)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_gu8rq")
nodes/fragment/28/position = Vector2(-2140, 140)
nodes/fragment/29/node = SubResource("VisualShaderNodeVectorDecompose_hsgvb")
nodes/fragment/29/position = Vector2(-2400, -120)
nodes/fragment/30/node = SubResource("VisualShaderNodeVec2Parameter_bka45")
nodes/fragment/30/position = Vector2(-2680, -120)
nodes/fragment/31/node = SubResource("VisualShaderNodeVectorOp_kff78")
nodes/fragment/31/position = Vector2(-2140, -120)
nodes/fragment/32/node = SubResource("VisualShaderNodeVectorCompose_tmriw")
nodes/fragment/32/position = Vector2(-1940, -120)
nodes/fragment/34/node = SubResource("VisualShaderNodeInput_yf1g1")
nodes/fragment/34/position = Vector2(-2060, -220)
nodes/fragment/38/node = SubResource("VisualShaderNodeMix_4q5h6")
nodes/fragment/38/position = Vector2(-720, 160)
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatParameter_yhij3")
nodes/fragment/39/position = Vector2(-1040, 120)
nodes/fragment/40/node = SubResource("VisualShaderNodeUVFunc_37mwb")
nodes/fragment/40/position = Vector2(-1720, -220)
nodes/fragment/41/node = SubResource("VisualShaderNodeTexture2DParameter_406j0")
nodes/fragment/41/position = Vector2(60, 540)
nodes/fragment/42/node = SubResource("VisualShaderNodeTexture_thcts")
nodes/fragment/42/position = Vector2(480, 520)
nodes/fragment/43/node = SubResource("VisualShaderNodeVectorOp_tgmic")
nodes/fragment/43/position = Vector2(780, 240)
nodes/fragment/44/node = SubResource("VisualShaderNodeFloatParameter_wxxa8")
nodes/fragment/44/position = Vector2(420, 240)
nodes/fragment/45/node = SubResource("VisualShaderNodeUVFunc_muv64")
nodes/fragment/45/position = Vector2(-340, 340)
nodes/fragment/46/node = SubResource("VisualShaderNodeVec2Parameter_337br")
nodes/fragment/46/position = Vector2(-720, 500)
nodes/fragment/47/node = SubResource("VisualShaderNodeTexture2DParameter_l273m")
nodes/fragment/47/position = Vector2(60, 880)
nodes/fragment/48/node = SubResource("VisualShaderNodeTexture_prekt")
nodes/fragment/48/position = Vector2(480, 880)
nodes/fragment/49/node = SubResource("VisualShaderNodeFloatParameter_nh8dd")
nodes/fragment/49/position = Vector2(800, -340)
nodes/fragment/50/node = SubResource("VisualShaderNodeFloatParameter_wqcht")
nodes/fragment/50/position = Vector2(800, -40)
nodes/fragment/51/node = SubResource("VisualShaderNodeFloatParameter_1hmlg")
nodes/fragment/51/position = Vector2(800, -620)
nodes/fragment/54/node = SubResource("VisualShaderNodeVectorOp_tbprn")
nodes/fragment/54/position = Vector2(-1740, 520)
nodes/fragment/55/node = SubResource("VisualShaderNodeFloatParameter_kol75")
nodes/fragment/55/position = Vector2(-2120, 440)
nodes/fragment/connections = PackedInt32Array(17, 0, 22, 0, 23, 0, 24, 2, 24, 0, 26, 1, 25, 0, 26, 0, 27, 0, 28, 1, 30, 0, 29, 0, 29, 1, 28, 0, 29, 0, 31, 0, 27, 0, 31, 1, 31, 0, 32, 0, 28, 0, 32, 1, 39, 0, 38, 2, 32, 0, 40, 2, 34, 0, 40, 0, 40, 0, 38, 0, 41, 0, 42, 2, 44, 0, 43, 1, 42, 0, 43, 0, 43, 0, 0, 6, 38, 0, 45, 0, 46, 0, 45, 1, 45, 0, 24, 0, 45, 0, 42, 0, 47, 0, 48, 2, 45, 0, 48, 0, 48, 0, 0, 9, 49, 0, 0, 3, 50, 0, 0, 4, 51, 0, 0, 2, 26, 0, 0, 0, 20, 0, 54, 1, 54, 0, 22, 2, 6, 0, 3, 1, 8, 0, 3, 3, 9, 0, 3, 4, 11, 0, 3, 5, 12, 0, 3, 6, 10, 0, 3, 7, 13, 0, 3, 8, 5, 0, 3, 9, 22, 0, 3, 0, 3, 0, 38, 1, 21, 0, 3, 2, 55, 0, 54, 0)
